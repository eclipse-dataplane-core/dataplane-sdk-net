# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test SDK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Authenticate with GitHub Packages
        run: |
          dotnet nuget add source \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Unit/Integration Tests
        run: dotnet test --no-build --verbosity normal --filter "Category!=Integration"

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - uses: docker/setup-compose-action@v1

      - name: Docker Compose Build
        env:
          NUGET_USERNAME: ${{ github.actor }}
          NUGET_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker compose up --build -d
        working-directory: ./Samples/Streaming

      - name: Execute E2E Tests
        run: |
          dotnet restore Samples/Streaming/TestRunner/TestRunner.csproj
          dotnet test Samples/Streaming/TestRunner/TestRunner.csproj --filter "Category=Integration"
        
        #      - name: Cleanup
        #        run: |
        #          docker-compose down -v
        
