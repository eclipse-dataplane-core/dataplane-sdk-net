name: Publish to GitHub NuGet Registry

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'NuGet package version to publish (optional, will read from project if not set)'
        required: false
        type: string

jobs:
  publish:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Authenticate with GitHub Packages
        run: |
          dotnet nuget add source \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Restore dependencies
        run: dotnet restore

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            # Remove leading 'v' if present (e.g., v1.2.3 -> 1.2.3)
            version="${GITHUB_REF#refs/tags/v}"
            echo "version=$version" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Read version from DataPlane.Sdk.Core.csproj (assumes all projects have same version)
            version=$(xmllint --xpath "string(//Project/PropertyGroup/Version)" DataPlane.Sdk.Core/DataPlane.Sdk.Core.csproj)
            echo "version=$version" >> $GITHUB_OUTPUT
          fi

      - name: Build packages
        run: |
          dotnet build DataPlane.Sdk.Core/DataPlane.Sdk.Core.csproj --configuration Release
          dotnet build DataPlane.Sdk.Api/DataPlane.Sdk.Api.csproj --configuration Release

      - name: Pack projects
        run: |
          dotnet pack DataPlane.Sdk.Core/DataPlane.Sdk.Core.csproj --configuration Release --output ./nupkgs /p:PackageVersion=${{ steps.get_version.outputs.version }}
          dotnet pack DataPlane.Sdk.Api/DataPlane.Sdk.Api.csproj --configuration Release --output ./nupkgs /p:PackageVersion=${{ steps.get_version.outputs.version }}

      - name: Push to GitHub Packages
        run: |
          dotnet nuget push ./nupkgs/*.nupkg \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate